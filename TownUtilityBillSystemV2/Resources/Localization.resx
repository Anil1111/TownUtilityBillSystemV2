<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Bills" xml:space="preserve">
    <value>Bills</value>
  </data>
  <data name="CalculatorOnLine" xml:space="preserve">
    <value>Calculator on-line</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPasswordWarning" xml:space="preserve">
    <value>The password and confirmation password do not match</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create a new account</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EnterValidEmail" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="EnterValidPhone" xml:space="preserve">
    <value>Please enter a valid phone</value>
  </data>
  <data name="FieldIsRequired" xml:space="preserve">
    <value>The field {0} is required</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LoginForApp" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogInSystem" xml:space="preserve">
    <value>Log in the system</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="Log_In" xml:space="preserve">
    <value>Log_in</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PayOnLine" xml:space="preserve">
    <value>Pay on-line</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterAsNewUser" xml:space="preserve">
    <value>Register as a new user</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Statistic" xml:space="preserve">
    <value>Statistic</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Utilities" xml:space="preserve">
    <value>Utilities</value>
  </data>
  <data name="ValueMustBeAtLeastCharactersLong" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="ValueMustHaveFromToCharactersLong" xml:space="preserve">
    <value>The {0} must habe from {2} to {1} characters long.</value>
  </data>
  <data name="ChooseNextFacility" xml:space="preserve">
    <value>Choose the next facility</value>
  </data>
  <data name="InvalidLoginAttempt" xml:space="preserve">
    <value>Invalid login attempt</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="PleaseLogInOrRegister" xml:space="preserve">
    <value>Please, log in or register</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="TownUtilityBillSystem" xml:space="preserve">
    <value>Town Utility Bill System</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read more...</value>
  </data>
  <data name="BackToHomePage" xml:space="preserve">
    <value>Back to home page</value>
  </data>
  <data name="BackToPreviousPage" xml:space="preserve">
    <value>Back to previous page</value>
  </data>
  <data name="AllNews" xml:space="preserve">
    <value>All news</value>
  </data>
  <data name="ForAdditionalInfoPleaseContact" xml:space="preserve">
    <value>For additional information, please contact</value>
  </data>
  <data name="AboutData_ChairmanСitation" xml:space="preserve">
    <value>. Thomas Thune Andersen, Chairman of the Board of Directors, said: “DONG was originally short for Danish Oil and Natural Gas. With our profound strategic 
transformation and the divestment of our upstream oil and gas business, this is no longer who we are. Therefore, now is the right time to change our name.</value>
  </data>
  <data name="AboutData_ChangeNameDate" xml:space="preserve">
    <value>On the 6th of November 2017</value>
  </data>
  <data name="AboutData_FirstReleaseDate" xml:space="preserve">
    <value>7th of August 2017.</value>
  </data>
  <data name="AboutData_HasChangedNameTo" xml:space="preserve">
    <value>has changed name to</value>
  </data>
  <data name="AboutData_IsAWebAppThatHelps" xml:space="preserve">
    <value>is a web application that helps to manage by the data for the town utility services such as the electricity, the water, the heating and the gas. Also it operates by the customer bill system.</value>
  </data>
  <data name="AboutData_IsOneOfNorthernEurope" xml:space="preserve">
    <value>is one of Northern Europe's leading energy groups and is headquartered in Denmark. Around 6,500 ambitious employees develop, construct and operate offshore wind farms, generate power and heat from our power	stations as well as supply and trade in energy to wholesale, business and residential customers. In addition, we produce oil and gas, and a process has been initiated to divest this business unit. The continuing part of the Group has approx 6,100 employees
and generated a revenue in 2016 of DKK 61 billion (EUR 8.2 is one of Northern Europe's leading energy groups and is headquartered in Denmark. Around 6,500 ambitious employees develop, construct and operate offshore wind farms, generate power and heat from our power stations as well as supply and trade in energy to wholesale, business and residential customers. In addition, we produce oil and gas, and a process has been initiated to divest this business unit. The continuing part of the Group has approx 6,100 employees and generated a revenue in 2016 of DKK 61 billion (EUR 8.2 billion).</value>
  </data>
  <data name="AboutData_TheFirstRelease" xml:space="preserve">
    <value>The first release of the App was on the</value>
  </data>
  <data name="DongEnergy" xml:space="preserve">
    <value>DONG Energy</value>
  </data>
  <data name="Orsted" xml:space="preserve">
    <value>Ørsted</value>
  </data>
  <data name="HigherPrice" xml:space="preserve">
    <value>Higher price</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="UsageForStandartPrice" xml:space="preserve">
    <value>Usage for standart price</value>
  </data>
  <data name="ValueMustBeBiggerThanZero" xml:space="preserve">
    <value>The {0} must be bigger than 0.</value>
  </data>
  <data name="CheckUtilityName" xml:space="preserve">
    <value>Check utility name</value>
  </data>
  <data name="Electricity" xml:space="preserve">
    <value>Electricity</value>
  </data>
  <data name="FindMeterByAddress" xml:space="preserve">
    <value>Find meter by address</value>
  </data>
  <data name="FindMeterByDetails" xml:space="preserve">
    <value>Find meter by details</value>
  </data>
  <data name="Gas" xml:space="preserve">
    <value>Gas</value>
  </data>
  <data name="Heating" xml:space="preserve">
    <value>Heating</value>
  </data>
  <data name="Meters" xml:space="preserve">
    <value>Meters</value>
  </data>
  <data name="MeterTypes" xml:space="preserve">
    <value>Meter types</value>
  </data>
  <data name="ShowAllUtilities" xml:space="preserve">
    <value>Show all utilities</value>
  </data>
  <data name="Water" xml:space="preserve">
    <value>Water</value>
  </data>
  <data name="AllUtilities" xml:space="preserve">
    <value>All Utilities</value>
  </data>
  <data name="CreateNewUtility" xml:space="preserve">
    <value>Create the new utility</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="MeterTypesLowerCase" xml:space="preserve">
    <value>Meter types</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Per" xml:space="preserve">
    <value>per</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Utility" xml:space="preserve">
    <value>Utility</value>
  </data>
  <data name="EditUtilityParameters" xml:space="preserve">
    <value>Edit utility parameters</value>
  </data>
  <data name="TotalCustomersForThisUtility" xml:space="preserve">
    <value>Total customers for this utility</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>less than</value>
  </data>
  <data name="OtherUtilities" xml:space="preserve">
    <value>Other utilities</value>
  </data>
</root>